// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model FilmStock {
  id        Int         @id @unique @default(autoincrement())
  name      String
  ISO       Int
  maker     Maker       @relation(fields: [makerId], references: [id])
  formats   String[]
  type      String
  makerId   Int
  Roll      Roll[]
  process   String
  img       String?
  RollCount RollCount[]
  UserCount UserCount[]
}

model Maker {
  id   Int         @id @unique @default(autoincrement())
  name String      @unique
  Film FilmStock[]
}

model Roll {
  id           Int       @id @unique @default(autoincrement())
  film         FilmStock @relation(fields: [filmId], references: [id])
  format       String    @default("N/A")
  dateStarted  DateTime  @default(now())
  dateFinished DateTime?
  type         String
  filmId       Int
  userId       String
}

model RollCount {
  id          Int       @id @unique @default(autoincrement())
  filmStockId Int
  format      String
  count       Int
  type        String
  filmStock   FilmStock @relation(fields: [filmStockId], references: [id])
}

model UserCount {
  id          Int       @id @unique @default(autoincrement())
  userId      String
  filmStockId Int
  count       Int
  format      String
  type        String
  filmstock   FilmStock @relation(fields: [filmStockId], references: [id])
}
